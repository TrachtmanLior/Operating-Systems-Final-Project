Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00      543     0.00     0.00  _fini
  0.00      0.00     0.00      450     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*)
  0.00      0.00     0.00      287     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long)
  0.00      0.00     0.00      143     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00      0.00     0.00      124     0.00     0.00  std::thread::thread<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.00     0.00       25     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data()
  0.00      0.00     0.00       25     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00      0.00     0.00       25     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long)
  0.00      0.00     0.00       25     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)
  0.00      0.00     0.00       22     0.00     0.00  std::allocator<std::function<void ()>*>::~allocator()
  0.00      0.00     0.00       21     0.00     0.00  handle_client(int)
  0.00      0.00     0.00       15     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator()
  0.00      0.00     0.00       14     0.00     0.00  MSTFactory::createSolver(MSTFactory::MSTType)
  0.00      0.00     0.00       14     0.00     0.00  BoruvkaSolver::BoruvkaSolver()
  0.00      0.00     0.00       14     0.00     0.00  Graph::removeEdge(int, int)
  0.00      0.00     0.00       14     0.00     0.00  Graph::Graph(int)
  0.00      0.00     0.00       14     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<MSTSolver> >::_Tuple_impl()
  0.00      0.00     0.00       14     0.00     0.00  std::__uniq_ptr_impl<MSTSolver, std::default_delete<MSTSolver> >::_M_deleter()
  0.00      0.00     0.00       14     0.00     0.00  main
  0.00      0.00     0.00        8     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&)
  0.00      0.00     0.00        7     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        6     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.00     0.00        3     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  std::__cxx11::to_string(int)
  0.00      0.00     0.00        2     0.00     0.00  std::_Tuple_impl<1ul, ThreadPool*>::_M_head(std::_Tuple_impl<1ul, ThreadPool*>&)
  0.00      0.00     0.00        2     0.00     0.00  std::enable_if<is_invocable_r_v<void, main::{lambda()#1}&>, void>::type std::__invoke_r<void, main::{lambda()#1}&>(main::{lambda()#1}&)
  0.00      0.00     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.00     0.00        1     0.00     0.00  std::_Rb_tree<std::tuple<int, int, int>, std::tuple<int, int, int>, std::_Identity<std::tuple<int, int, int> >, std::less<std::tuple<int, int, int> >, std::allocator<std::tuple<int, int, int> > >::_M_destroy_node(std::_Rb_tree_node<std::tuple<int, int, int> >*)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<Edge*, Edge>(Edge*, Edge*, std::allocator<Edge>&)
  0.00      0.00     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<!std::__is_scalar<Edge>::__value, void>::__type std::__fill_a1<Edge*, Edge>(Edge*, Edge*, Edge const&)

			Call graph


granularity: each sample hit covers 4 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00      14/14          etext [5]
[1]      0.0    0.00    0.00      14         main [1]
                0.00    0.00      14/124         std::thread::thread<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [12]
                0.00    0.00       6/450         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [9]
                0.00    0.00       2/22          std::allocator<std::function<void ()>*>::~allocator() [17]
                0.00    0.00       2/3           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [29]
-----------------------------------------------
                0.00    0.00      14/543         Graph::removeEdge(int, int)::{lambda(Edge const&)#1}::operator()(Edge const&) const [821]
                0.00    0.00     529/543         etext [5]
[8]      0.0    0.00    0.00     543         _fini [8]
-----------------------------------------------
                0.00    0.00       2/450         std::_Function_handler<void (), main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [464]
                0.00    0.00       2/450         void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>) [409]
                0.00    0.00       6/450         main [1]
                0.00    0.00      28/450         __static_initialization_and_destruction_0(int, int) [45]
                0.00    0.00     412/450         etext [5]
[9]      0.0    0.00    0.00     450         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [9]
                0.00    0.00     255/287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [10]
-----------------------------------------------
                0.00    0.00       3/287         std::thread* std::__addressof<std::thread>(std::thread&) [655]
                0.00    0.00       4/287         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [29]
                0.00    0.00      25/287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [13]
                0.00    0.00     255/287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [9]
[10]     0.0    0.00    0.00     287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [10]
-----------------------------------------------
                0.00    0.00     143/143         std::thread::thread<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [12]
[11]     0.0    0.00    0.00     143         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [11]
-----------------------------------------------
                0.00    0.00       2/124         main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [776]
                0.00    0.00       2/124         main::{lambda()#1}*& std::_Any_data::_M_access<main::{lambda()#1}*>() [643]
                0.00    0.00       2/124         std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [403]
                0.00    0.00      14/124         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [498]
                0.00    0.00      14/124         main [1]
                0.00    0.00      14/124         std::_Head_base<0ul, MSTSolver*, false>::_Head_base() [269]
                0.00    0.00      76/124         etext [5]
[12]     0.0    0.00    0.00     124         std::thread::thread<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [12]
                0.00    0.00     143/143         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [11]
-----------------------------------------------
                0.00    0.00      25/25          std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [15]
[13]     0.0    0.00    0.00      25         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [13]
                0.00    0.00      25/287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [10]
-----------------------------------------------
                0.00    0.00       1/25          std::_Rb_tree<std::tuple<int, int, int>, std::tuple<int, int, int>, std::_Identity<std::tuple<int, int, int> >, std::less<std::tuple<int, int, int> >, std::allocator<std::tuple<int, int, int> > >::_M_put_node(std::_Rb_tree_node<std::tuple<int, int, int> >*) [605]
                0.00    0.00       1/25          __gnu_cxx::new_allocator<int>::max_size() const [177]
                0.00    0.00       3/25          void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [33]
                0.00    0.00      20/25          etext [5]
[14]     0.0    0.00    0.00      25         void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [14]
                0.00    0.00      25/25          std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&) [16]
-----------------------------------------------
                0.00    0.00      25/25          std::allocator<std::function<void ()>*>::~allocator() [17]
[15]     0.0    0.00    0.00      25         std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [15]
                0.00    0.00      25/25          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [13]
-----------------------------------------------
                0.00    0.00      25/25          void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [14]
[16]     0.0    0.00    0.00      25         std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&) [16]
-----------------------------------------------
                0.00    0.00       2/22          main [1]
                0.00    0.00      20/22          etext [5]
[17]     0.0    0.00    0.00      22         std::allocator<std::function<void ()>*>::~allocator() [17]
                0.00    0.00      25/25          std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [15]
-----------------------------------------------
                                   3             handle_client(int) [18]
                0.00    0.00       1/21          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [815]
                0.00    0.00      20/21          etext [5]
[18]     0.0    0.00    0.00      21+3       handle_client(int) [18]
                                   3             handle_client(int) [18]
-----------------------------------------------
                0.00    0.00       1/15          etext [5]
                0.00    0.00      14/15          Graph::addEdge(int, int, int) [70]
[19]     0.0    0.00    0.00      15         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [19]
-----------------------------------------------
                0.00    0.00      14/14          std::__uniq_ptr_data<MSTSolver, std::default_delete<MSTSolver>, true, true>::__uniq_ptr_impl(MSTSolver*) [422]
[20]     0.0    0.00    0.00      14         MSTFactory::createSolver(MSTFactory::MSTType) [20]
-----------------------------------------------
                0.00    0.00      14/14          etext [5]
[21]     0.0    0.00    0.00      14         BoruvkaSolver::BoruvkaSolver() [21]
-----------------------------------------------
                0.00    0.00      14/14          etext [5]
[22]     0.0    0.00    0.00      14         Graph::removeEdge(int, int) [22]
-----------------------------------------------
                0.00    0.00      14/14          etext [5]
[23]     0.0    0.00    0.00      14         Graph::Graph(int) [23]
-----------------------------------------------
                0.00    0.00      14/14          etext [5]
[24]     0.0    0.00    0.00      14         std::_Tuple_impl<1ul, std::default_delete<MSTSolver> >::_Tuple_impl() [24]
-----------------------------------------------
                0.00    0.00      14/14          Graph::addEdge(int, int, int) [70]
[25]     0.0    0.00    0.00      14         std::__uniq_ptr_impl<MSTSolver, std::default_delete<MSTSolver> >::_M_deleter() [25]
-----------------------------------------------
                0.00    0.00       1/8           etext [5]
                0.00    0.00       7/8           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [27]
[26]     0.0    0.00    0.00       8         std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [26]
-----------------------------------------------
                0.00    0.00       2/7           std::__cxx11::to_string(int) [30]
                0.00    0.00       5/7           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [493]
[27]     0.0    0.00    0.00       7         __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [27]
                0.00    0.00       7/8           std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [26]
-----------------------------------------------
                                   2             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [28]
                0.00    0.00       6/6           etext [5]
[28]     0.0    0.00    0.00       6+2       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [28]
                                   2             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [28]
-----------------------------------------------
                0.00    0.00       1/3           etext [5]
                0.00    0.00       2/3           main [1]
[29]     0.0    0.00    0.00       3         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [29]
                0.00    0.00       4/287         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [10]
-----------------------------------------------
                0.00    0.00       1/3           etext [5]
                0.00    0.00       2/3           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [815]
[30]     0.0    0.00    0.00       3         std::__cxx11::to_string(int) [30]
                0.00    0.00       2/7           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [27]
-----------------------------------------------
                0.00    0.00       2/2           handle_solver(int, MSTFactory::MSTType) [43]
[31]     0.0    0.00    0.00       2         std::_Tuple_impl<1ul, ThreadPool*>::_M_head(std::_Tuple_impl<1ul, ThreadPool*>&) [31]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Function_base::_Base_manager<main::{lambda()#1}>::_M_create<main::{lambda()#1}>(std::_Any_data&, main::{lambda()#1}&&, std::integral_constant<bool, true>) [409]
[32]     0.0    0.00    0.00       2         std::enable_if<is_invocable_r_v<void, main::{lambda()#1}&>, void>::type std::__invoke_r<void, main::{lambda()#1}&>(main::{lambda()#1}&) [32]
-----------------------------------------------
                                   1             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [33]
                0.00    0.00       1/1           etext [5]
[33]     0.0    0.00    0.00       1+1       void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [33]
                0.00    0.00       3/25          void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [14]
                                   1             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [33]
-----------------------------------------------
                0.00    0.00       1/1           etext [5]
[34]     0.0    0.00    0.00       1         std::_Rb_tree<std::tuple<int, int, int>, std::tuple<int, int, int>, std::_Identity<std::tuple<int, int, int> >, std::less<std::tuple<int, int, int> >, std::allocator<std::tuple<int, int, int> > >::_M_destroy_node(std::_Rb_tree_node<std::tuple<int, int, int> >*) [34]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [195]
[35]     0.0    0.00    0.00       1         std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [35]
-----------------------------------------------
                0.00    0.00       1/1           etext [5]
[36]     0.0    0.00    0.00       1         void std::_Destroy<Edge*, Edge>(Edge*, Edge*, std::allocator<Edge>&) [36]
-----------------------------------------------
                0.00    0.00       1/1           etext [5]
[37]     0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [37]
-----------------------------------------------
                0.00    0.00       1/1           etext [5]
[38]     0.0    0.00    0.00       1         __gnu_cxx::__enable_if<!std::__is_scalar<Edge>::__value, void>::__type std::__fill_a1<Edge*, Edge>(Edge*, Edge*, Edge const&) [38]
-----------------------------------------------

Index by function name

  [18] handle_client(int)     [31] std::_Tuple_impl<1ul, ThreadPool*>::_M_head(std::_Tuple_impl<1ul, ThreadPool*>&) [33] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  [20] MSTFactory::createSolver(MSTFactory::MSTType) [24] std::_Tuple_impl<1ul, std::default_delete<MSTSolver> >::_Tuple_impl() [30] std::__cxx11::to_string(int)
  [21] BoruvkaSolver::BoruvkaSolver() [14] void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [34] std::_Rb_tree<std::tuple<int, int, int>, std::tuple<int, int, int>, std::_Identity<std::tuple<int, int, int> >, std::less<std::tuple<int, int, int> >, std::allocator<std::tuple<int, int, int> > >::_M_destroy_node(std::_Rb_tree_node<std::tuple<int, int, int> >*)
  [22] Graph::removeEdge(int, int) [19] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [32] std::enable_if<is_invocable_r_v<void, main::{lambda()#1}&>, void>::type std::__invoke_r<void, main::{lambda()#1}&>(main::{lambda()#1}&) (invoke.h)
  [23] Graph::Graph(int)      [25] std::__uniq_ptr_impl<MSTSolver, std::default_delete<MSTSolver> >::_M_deleter() [35] std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  [27] __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [15] std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [36] void std::_Destroy<Edge*, Edge>(Edge*, Edge*, std::allocator<Edge>&)
  [17] std::allocator<std::function<void ()>*>::~allocator() [29] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [37] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  [10] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [16] std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&) [38] __gnu_cxx::__enable_if<!std::__is_scalar<Edge>::__value, void>::__type std::__fill_a1<Edge*, Edge>(Edge*, Edge*, Edge const&)
  [11] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [12] std::thread::thread<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [8] _fini
  [13] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [26] std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [1] main
   [9] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [28] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
